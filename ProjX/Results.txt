lllimitlililimit
Rock limit all
A;
A;B
G limit A>7
Ant=Wolf-Aardvark;
A=B+C
Just some text to check with the programme

Now for some more complex stuff
"Quotes"
'Single quotes'
Equations
control characters \n
\\n
\\\c
\\\n
G<=J



//
=
/
*
-
+
;
l
li
limit
>
>=
<
<=
;
"
'
16
lllimitlililimit

<<CTokeniser::FindLargest >>
lllimitlililimi
Initial delim = //

<<CTokeniser::FindLargest >>
llimitlililimi
Initial delim = //

<<CTokeniser::FindLargest >>
limitlililimi
Initial delim = //
li to replace l
limit to replace li

<<CTokeniser::FindLargest >>
lililimi
Initial delim = //
li to replace l

<<CTokeniser::FindLargest >>
lilimi
Initial delim = //
li to replace l

<<CTokeniser::FindLargest >>
limi
Initial delim = //
li to replace l
Rock limit all

<<CTokeniser::FindLargest >>
limit al
Initial delim = //
li to replace l
limit to replace li

<<CTokeniser::FindLargest >>
l
Initial delim = //

<<CTokeniser::FindLargest >>

Initial delim = //
A;

<<CTokeniser::FindLargest >>

Initial delim = <
A;B

<<CTokeniser::FindLargest >>
;
Initial delim = <
G limit A>7

<<CTokeniser::FindLargest >>
limit A>
Initial delim = //
li to replace l
limit to replace li

<<CTokeniser::FindLargest >>
>
Initial delim = l
Ant=Wolf-Aardvark;

<<CTokeniser::FindLargest >>
=Wolf-Aardvark
Initial delim = >

<<CTokeniser::FindLargest >>
lf-Aardvark
Initial delim = //

<<CTokeniser::FindLargest >>
-Aardvark
Initial delim = /

<<CTokeniser::FindLargest >>

Initial delim = <
A=B+C

<<CTokeniser::FindLargest >>
=B+
Initial delim = >

<<CTokeniser::FindLargest >>
+
Initial delim = -
Just some text to check with the programme

Now for some more complex stuff

<<CTokeniser::FindLargest >>
lex stuf
Initial delim = //
"Quotes"

<<CTokeniser::FindLargest >>
"Quotes
Initial delim = '

<<CTokeniser::FindLargest >>

Initial delim = '
'Single quotes'

<<CTokeniser::FindLargest >>
'Single quotes
Initial delim = *

<<CTokeniser::FindLargest >>
le quotes
Initial delim = //

<<CTokeniser::FindLargest >>

Initial delim = *
Equations
control characters \n

<<CTokeniser::FindLargest >>
l characters \
Initial delim = //
\\n
\\\c
\\\n
G<=J

<<CTokeniser::FindLargest >>
<=
Initial delim = =
<= to replace <



(0,0): l
(0,1): l
(0,2): limit
(0,7): li
(0,9): li
(0,11): li
(0,13): mit
(1,0): Rock 
(1,5): limit
(1,10):  a
(1,12): l
(1,13): l
(2,0): A
(2,1): ;
(3,0): A
(3,1): ;
(3,2): B
(4,0): G 
(4,2): limit
(4,7):  A
(4,9): >
(4,10): 7
(5,0): Ant
(5,3): =
(5,4): Wo
(5,6): l
(5,7): f
(5,8): -
(5,9): Aardvark
(5,17): ;
(6,0): A
(6,1): =
(6,2): B
(6,3): +
(6,4): C
(7,0): Just some text to check with the programme
(9,0): Now for some more comp
(9,22): l
(9,23): ex stuff
(10,0): "
(10,1): Quotes
(10,7): "
(11,0): '
(11,1): Sing
(11,5): l
(11,6): e quotes
(11,14): '
(12,0): Equations
(13,0): contro
(13,6): l
(13,7):  characters \n
(14,0): \\n
(15,0): \\\c
(16,0): \\\n
(17,0): G
(17,1): <=
(17,3): J

16
" [Delim]
' [Delim]
* [Delim]
+ [Delim]
- [Delim]
/ [Delim]
; [Delim]
< [Delim]
= [Delim]
> [Delim]
l [Delim]
// [Delim]
<= [Delim]
>= [Delim]
li [Delim]
limit [Delim]

